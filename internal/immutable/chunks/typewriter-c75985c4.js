import{_ as o}from"./preload-helper-0ffe6af8.js";import{w as i}from"./writeEffect-152b1799.js";const d=(t,e)=>{new MutationObserver(n=>{n.forEach(s=>{const a=s.type==="attributes",c=s.target.classList.contains("typing");a&&c&&e()})}).observe(t,{attributes:!0,childList:!0,subtree:!0})},l=t=>t.forEach(e=>e.currentNode.textContent=""),u=async(t,e)=>{if(e.cascade)l(t);else{const{getLongestTextElement:r}=await o(()=>import("./getLongestTextElement-c4bcaa02.js"),[],import.meta.url),n=r(t);d(n,()=>e.dispatch("done"))}for(const r of t)e.cascade?(await i(r,e),r.currentNode.classList.replace("typing","finished-typing")):i(r,e).then(()=>{r.currentNode.classList.replace("typing","finished-typing")});e.cascade&&e.dispatch("done")};export{u as mode};
